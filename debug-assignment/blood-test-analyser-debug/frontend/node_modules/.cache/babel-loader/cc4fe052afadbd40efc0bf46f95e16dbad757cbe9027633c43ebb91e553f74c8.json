{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\AI_Assignment\\\\debug-assignment\\\\blood-test-analyser-debug\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Verify token and get user info\n      const verifyToken = async () => {\n        try {\n          // You can add a token verification endpoint here\n          // For now, we'll just check if token exists\n          if (token) {\n            setUser(JSON.parse(localStorage.getItem('user')));\n          }\n        } catch (error) {\n          console.error('Token verification failed:', error);\n          logout();\n        } finally {\n          setLoading(false);\n        }\n      };\n      verifyToken();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n      const response = await axios.post('/api/login', formData);\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const formData = new FormData();\n      formData.append('username', userData.username);\n      formData.append('email', userData.email);\n      formData.append('password', userData.password);\n      formData.append('full_name', userData.full_name);\n      const response = await axios.post('/api/register', formData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated: !!token,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","verifyToken","JSON","parse","error","console","logout","login","username","password","formData","FormData","append","response","post","access_token","userData","data","setItem","stringify","success","_error$response","_error$response$data","detail","register","email","full_name","_error$response2","_error$response2$data","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/AI_Assignment/debug-assignment/blood-test-analyser-debug/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // Set default authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Verify token and get user info\r\n      const verifyToken = async () => {\r\n        try {\r\n          // You can add a token verification endpoint here\r\n          // For now, we'll just check if token exists\r\n          if (token) {\r\n            setUser(JSON.parse(localStorage.getItem('user')));\r\n          }\r\n        } catch (error) {\r\n          console.error('Token verification failed:', error);\r\n          logout();\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      \r\n      verifyToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', username);\r\n      formData.append('password', password);\r\n\r\n      const response = await axios.post('/api/login', formData);\r\n      const { access_token, user: userData } = response.data;\r\n\r\n      setToken(access_token);\r\n      setUser(userData);\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.detail || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', userData.username);\r\n      formData.append('email', userData.email);\r\n      formData.append('password', userData.password);\r\n      formData.append('full_name', userData.full_name);\r\n\r\n      const response = await axios.post('/api/register', formData);\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.detail || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    isAuthenticated: !!token,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}