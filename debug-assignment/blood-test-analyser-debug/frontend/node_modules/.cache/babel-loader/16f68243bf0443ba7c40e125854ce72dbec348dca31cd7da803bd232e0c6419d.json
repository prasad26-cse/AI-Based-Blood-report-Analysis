{"ast":null,"code":"import { useEffect } from 'react';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectChartLayout } from '../context/chartLayoutContext';\nimport { useAppDispatch, useAppSelector } from './hooks';\nimport { addLegendPayload, removeLegendPayload } from './legendSlice';\nvar noop = () => {};\nexport function SetLegendPayload(_ref) {\n  var {\n    legendPayload\n  } = _ref;\n  var dispatch = useAppDispatch();\n  var isPanorama = useIsPanorama();\n  useEffect(() => {\n    if (isPanorama) {\n      return noop;\n    }\n    dispatch(addLegendPayload(legendPayload));\n    return () => {\n      dispatch(removeLegendPayload(legendPayload));\n    };\n  }, [dispatch, isPanorama, legendPayload]);\n  return null;\n}\nexport function SetPolarLegendPayload(_ref2) {\n  var {\n    legendPayload\n  } = _ref2;\n  var dispatch = useAppDispatch();\n  var layout = useAppSelector(selectChartLayout);\n  useEffect(() => {\n    if (layout !== 'centric' && layout !== 'radial') {\n      return noop;\n    }\n    dispatch(addLegendPayload(legendPayload));\n    return () => {\n      dispatch(removeLegendPayload(legendPayload));\n    };\n  }, [dispatch, layout, legendPayload]);\n  return null;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}