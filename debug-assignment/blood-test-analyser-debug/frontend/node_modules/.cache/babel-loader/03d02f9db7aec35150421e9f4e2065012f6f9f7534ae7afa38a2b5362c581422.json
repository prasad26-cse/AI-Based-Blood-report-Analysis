{"ast":null,"code":"function ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport { getTooltipTranslate } from '../util/tooltip/translate';\nexport class TooltipBoundingBox extends PureComponent {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      dismissed: false,\n      dismissedAtCoordinate: {\n        x: 0,\n        y: 0\n      }\n    });\n    _defineProperty(this, \"handleKeyDown\", event => {\n      if (event.key === 'Escape') {\n        var _this$props$coordinat, _this$props$coordinat2, _this$props$coordinat3, _this$props$coordinat4;\n        this.setState({\n          dismissed: true,\n          dismissedAtCoordinate: {\n            x: (_this$props$coordinat = (_this$props$coordinat2 = this.props.coordinate) === null || _this$props$coordinat2 === void 0 ? void 0 : _this$props$coordinat2.x) !== null && _this$props$coordinat !== void 0 ? _this$props$coordinat : 0,\n            y: (_this$props$coordinat3 = (_this$props$coordinat4 = this.props.coordinate) === null || _this$props$coordinat4 === void 0 ? void 0 : _this$props$coordinat4.y) !== null && _this$props$coordinat3 !== void 0 ? _this$props$coordinat3 : 0\n          }\n        });\n      }\n    });\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n  componentDidUpdate() {\n    var _this$props$coordinat5, _this$props$coordinat6;\n    if (!this.state.dismissed) {\n      return;\n    }\n    if (((_this$props$coordinat5 = this.props.coordinate) === null || _this$props$coordinat5 === void 0 ? void 0 : _this$props$coordinat5.x) !== this.state.dismissedAtCoordinate.x || ((_this$props$coordinat6 = this.props.coordinate) === null || _this$props$coordinat6 === void 0 ? void 0 : _this$props$coordinat6.y) !== this.state.dismissedAtCoordinate.y) {\n      this.state.dismissed = false;\n    }\n  }\n  render() {\n    var {\n      active,\n      allowEscapeViewBox,\n      animationDuration,\n      animationEasing,\n      children,\n      coordinate,\n      hasPayload,\n      isAnimationActive,\n      offset,\n      position,\n      reverseDirection,\n      useTranslate3d,\n      viewBox,\n      wrapperStyle,\n      lastBoundingBox,\n      innerRef,\n      hasPortalFromProps\n    } = this.props;\n    var {\n      cssClasses,\n      cssProperties\n    } = getTooltipTranslate({\n      allowEscapeViewBox,\n      coordinate,\n      offsetTopLeft: offset,\n      position,\n      reverseDirection,\n      tooltipBox: {\n        height: lastBoundingBox.height,\n        width: lastBoundingBox.width\n      },\n      useTranslate3d,\n      viewBox\n    });\n\n    // do not use absolute styles if the user has passed a custom portal prop\n    var positionStyles = hasPortalFromProps ? {} : _objectSpread(_objectSpread({\n      transition: isAnimationActive && active ? \"transform \".concat(animationDuration, \"ms \").concat(animationEasing) : undefined\n    }, cssProperties), {}, {\n      pointerEvents: 'none',\n      visibility: !this.state.dismissed && active && hasPayload ? 'visible' : 'hidden',\n      position: 'absolute',\n      top: 0,\n      left: 0\n    });\n    var outerStyle = _objectSpread(_objectSpread({}, positionStyles), {}, {\n      visibility: !this.state.dismissed && active && hasPayload ? 'visible' : 'hidden'\n    }, wrapperStyle);\n    return (/*#__PURE__*/\n      // This element allow listening to the `Escape` key. See https://github.com/recharts/recharts/pull/2925\n      React.createElement(\"div\", {\n        // @ts-expect-error typescript library does not recognize xmlns attribute, but it's required for an HTML chunk inside SVG.\n        xmlns: \"http://www.w3.org/1999/xhtml\",\n        tabIndex: -1,\n        className: cssClasses,\n        style: outerStyle,\n        ref: innerRef\n      }, children)\n    );\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}