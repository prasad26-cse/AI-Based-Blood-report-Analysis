{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst isDeepKey = require('../_internal/isDeepKey.js');\nconst isIndex = require('../_internal/isIndex.js');\nconst isArguments = require('../predicate/isArguments.js');\nconst toPath = require('../util/toPath.js');\nfunction has(object, path) {\n  let resolvedPath;\n  if (Array.isArray(path)) {\n    resolvedPath = path;\n  } else if (typeof path === 'string' && isDeepKey.isDeepKey(path) && object?.[path] == null) {\n    resolvedPath = toPath.toPath(path);\n  } else {\n    resolvedPath = [path];\n  }\n  if (resolvedPath.length === 0) {\n    return false;\n  }\n  let current = object;\n  for (let i = 0; i < resolvedPath.length; i++) {\n    const key = resolvedPath[i];\n    if (current == null || !Object.hasOwn(current, key)) {\n      const isSparseIndex = (Array.isArray(current) || isArguments.isArguments(current)) && isIndex.isIndex(key) && key < current.length;\n      if (!isSparseIndex) {\n        return false;\n      }\n    }\n    current = current[key];\n  }\n  return true;\n}\nexports.has = has;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}