{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n\n/**\n * The properties inside this state update independently of each other and quite often.\n * When selecting, never select the whole state because you are going to get\n * unnecessary re-renders. Select only the properties you need.\n *\n * This is why this state type is not exported - don't use it directly.\n */\n\nvar initialState = {\n  settings: {\n    layout: 'horizontal',\n    align: 'center',\n    verticalAlign: 'middle',\n    itemSorter: 'value'\n  },\n  size: {\n    width: 0,\n    height: 0\n  },\n  payload: []\n};\nvar legendSlice = createSlice({\n  name: 'legend',\n  initialState,\n  reducers: {\n    setLegendSize(state, action) {\n      state.size.width = action.payload.width;\n      state.size.height = action.payload.height;\n    },\n    setLegendSettings(state, action) {\n      state.settings.align = action.payload.align;\n      state.settings.layout = action.payload.layout;\n      state.settings.verticalAlign = action.payload.verticalAlign;\n      state.settings.itemSorter = action.payload.itemSorter;\n    },\n    addLegendPayload(state, action) {\n      state.payload.push(castDraft(action.payload));\n    },\n    removeLegendPayload(state, action) {\n      var index = current(state).payload.indexOf(castDraft(action.payload));\n      if (index > -1) {\n        state.payload.splice(index, 1);\n      }\n    }\n  }\n});\nexport var {\n  setLegendSize,\n  setLegendSettings,\n  addLegendPayload,\n  removeLegendPayload\n} = legendSlice.actions;\nexport var legendReducer = legendSlice.reducer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}