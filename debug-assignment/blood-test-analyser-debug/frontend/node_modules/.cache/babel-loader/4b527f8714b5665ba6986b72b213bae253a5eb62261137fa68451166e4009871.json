{"ast":null,"code":"var _excluded = [\"contextPayload\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nimport * as React from 'react';\nimport { PureComponent, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useLegendPortal } from '../context/legendPortalContext';\nimport { DefaultLegendContent } from './DefaultLegendContent';\nimport { isNumber } from '../util/DataUtils';\nimport { getUniqPayload } from '../util/payload/getUniqPayload';\nimport { useLegendPayload } from '../context/legendPayloadContext';\nimport { useElementOffset } from '../util/useElementOffset';\nimport { useChartHeight, useChartWidth, useMargin } from '../context/chartLayoutContext';\nimport { setLegendSettings, setLegendSize } from '../state/legendSlice';\nimport { useAppDispatch } from '../state/hooks';\nfunction defaultUniqBy(entry) {\n  return entry.value;\n}\nfunction LegendContent(props) {\n  var {\n      contextPayload\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var finalPayload = getUniqPayload(contextPayload, props.payloadUniqBy, defaultUniqBy);\n  var contentProps = _objectSpread(_objectSpread({}, otherProps), {}, {\n    payload: finalPayload\n  });\n  if (/*#__PURE__*/React.isValidElement(props.content)) {\n    return /*#__PURE__*/React.cloneElement(props.content, contentProps);\n  }\n  if (typeof props.content === 'function') {\n    return /*#__PURE__*/React.createElement(props.content, contentProps);\n  }\n  return /*#__PURE__*/React.createElement(DefaultLegendContent, contentProps);\n}\nfunction getDefaultPosition(style, props, margin, chartWidth, chartHeight, box) {\n  var {\n    layout,\n    align,\n    verticalAlign\n  } = props;\n  var hPos, vPos;\n  if (!style || (style.left === undefined || style.left === null) && (style.right === undefined || style.right === null)) {\n    if (align === 'center' && layout === 'vertical') {\n      hPos = {\n        left: ((chartWidth || 0) - box.width) / 2\n      };\n    } else {\n      hPos = align === 'right' ? {\n        right: margin && margin.right || 0\n      } : {\n        left: margin && margin.left || 0\n      };\n    }\n  }\n  if (!style || (style.top === undefined || style.top === null) && (style.bottom === undefined || style.bottom === null)) {\n    if (verticalAlign === 'middle') {\n      vPos = {\n        top: ((chartHeight || 0) - box.height) / 2\n      };\n    } else {\n      vPos = verticalAlign === 'bottom' ? {\n        bottom: margin && margin.bottom || 0\n      } : {\n        top: margin && margin.top || 0\n      };\n    }\n  }\n  return _objectSpread(_objectSpread({}, hPos), vPos);\n}\nfunction LegendSettingsDispatcher(props) {\n  var dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setLegendSettings(props));\n  }, [dispatch, props]);\n  return null;\n}\nfunction LegendSizeDispatcher(props) {\n  var dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setLegendSize(props));\n    return () => {\n      dispatch(setLegendSize({\n        width: 0,\n        height: 0\n      }));\n    };\n  }, [dispatch, props]);\n  return null;\n}\nfunction LegendWrapper(props) {\n  var contextPayload = useLegendPayload();\n  var legendPortalFromContext = useLegendPortal();\n  var margin = useMargin();\n  var {\n    width: widthFromProps,\n    height: heightFromProps,\n    wrapperStyle,\n    portal: portalFromProps\n  } = props;\n  // The contextPayload is not used directly inside the hook, but we need the onBBoxUpdate call\n  // when the payload changes, therefore it's here as a dependency.\n  var [lastBoundingBox, updateBoundingBox] = useElementOffset([contextPayload]);\n  var chartWidth = useChartWidth();\n  var chartHeight = useChartHeight();\n  var maxWidth = chartWidth - (margin.left || 0) - (margin.right || 0);\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  var widthOrHeight = Legend.getWidthOrHeight(props.layout, heightFromProps, widthFromProps, maxWidth);\n  // if the user supplies their own portal, only use their defined wrapper styles\n  var outerStyle = portalFromProps ? wrapperStyle : _objectSpread(_objectSpread({\n    position: 'absolute',\n    width: (widthOrHeight === null || widthOrHeight === void 0 ? void 0 : widthOrHeight.width) || widthFromProps || 'auto',\n    height: (widthOrHeight === null || widthOrHeight === void 0 ? void 0 : widthOrHeight.height) || heightFromProps || 'auto'\n  }, getDefaultPosition(wrapperStyle, props, margin, chartWidth, chartHeight, lastBoundingBox)), wrapperStyle);\n  var legendPortal = portalFromProps !== null && portalFromProps !== void 0 ? portalFromProps : legendPortalFromContext;\n  if (legendPortal == null) {\n    return null;\n  }\n  var legendElement = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recharts-legend-wrapper\",\n    style: outerStyle,\n    ref: updateBoundingBox\n  }, /*#__PURE__*/React.createElement(LegendSettingsDispatcher, {\n    layout: props.layout,\n    align: props.align,\n    verticalAlign: props.verticalAlign,\n    itemSorter: props.itemSorter\n  }), /*#__PURE__*/React.createElement(LegendSizeDispatcher, {\n    width: lastBoundingBox.width,\n    height: lastBoundingBox.height\n  }), /*#__PURE__*/React.createElement(LegendContent, _extends({}, props, widthOrHeight, {\n    margin: margin,\n    chartWidth: chartWidth,\n    chartHeight: chartHeight,\n    contextPayload: contextPayload\n  })));\n  return /*#__PURE__*/createPortal(legendElement, legendPortal);\n}\nexport class Legend extends PureComponent {\n  static getWidthOrHeight(layout, height, width, maxWidth) {\n    if (layout === 'vertical' && isNumber(height)) {\n      return {\n        height\n      };\n    }\n    if (layout === 'horizontal') {\n      return {\n        width: width || maxWidth\n      };\n    }\n    return null;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(LegendWrapper, this.props);\n  }\n}\n_defineProperty(Legend, \"displayName\", 'Legend');\n_defineProperty(Legend, \"defaultProps\", {\n  align: 'center',\n  iconSize: 14,\n  itemSorter: 'value',\n  layout: 'horizontal',\n  verticalAlign: 'bottom'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}