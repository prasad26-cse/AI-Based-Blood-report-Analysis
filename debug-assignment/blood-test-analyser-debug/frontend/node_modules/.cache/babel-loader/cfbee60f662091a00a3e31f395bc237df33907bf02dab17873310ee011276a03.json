{"ast":null,"code":"/**\n * Callback type for the timeout function.\n * Receives current time in milliseconds as an argument.\n */\n\n/**\n * A function that, when called, cancels the timeout.\n */\n\nexport class RequestAnimationFrameTimeoutController {\n  setTimeout(callback) {\n    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var startTime = performance.now();\n    var requestId = null;\n    var executeCallback = now => {\n      if (now - startTime >= delay) {\n        callback(now);\n        // tests fail without the extra if, even when five lines below it's not needed\n        // TODO finish transition to the mocked timeout controller and then remove this condition\n      } else if (typeof requestAnimationFrame === 'function') {\n        requestId = requestAnimationFrame(executeCallback);\n      }\n    };\n    requestId = requestAnimationFrame(executeCallback);\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}